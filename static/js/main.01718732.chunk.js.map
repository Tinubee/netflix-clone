{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Components/MovieDetail.tsx","Components/MovieSlider.tsx","Routes/Home.tsx","Components/TvDetail.tsx","Components/TvSlider.tsx","Routes/Search.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useRouteMatch","tvMatch","searchMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","history","useHistory","useEffect","onChange","get","start","useForm","register","handleSubmit","variants","animate","initial","whileHover","xmlns","width","height","viewBox","path","d","to","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","prev","x","type","fill","fillRule","clipRule","required","placeholder","API_KEY","BASE_URL","getNowPlayingMovies","fetch","then","res","json","getPopularMovies","getTopRatedMovies","getUpComingMovies","id","getPopularTvShows","getOnAirTvShows","getTopRatedTvShows","makeImagePath","format","Overlay","MovieInfoImage","bgPhoto","BigMovie","black","BigTitle","h3","BigOverview","p","MovieDetail","useQuery","getMovieDetail","detailData","detailLoading","isLoading","AnimatePresence","exit","opacity","style","backdrop_path","original_title","overview","Slider","Row","Box","Info","MovieTitle","TypeText","boxVariants","scale","hover","y","delay","duration","infoVariants","rowVariants","hidden","window","outerWidth","visible","IconContainer","PrevIcon","NextIcon","IconVariants","MovieSlider","bigMovieMatch","index","setIndex","leaving","setLeaving","toggleLeaving","totalMovies","results","length","maxIndex","Math","floor","icon","faSquareCaretLeft","faSquareCaretRight","onExitComplete","slice","map","movie","movieId","onBoxClick","vote_average","params","Wrapper","Loader","Banner","Title","h2","Overview","Home","nowPlayingData","nowPlayingIsLoading","popularData","popularIsLoading","topRatedData","topRatedIsLoading","upComingData","upComingIsLoading","TvDetail","getTvShowDetail","original_name","TvSlider","bigTvShowsMatch","totalTvShows","tvshow","tvshowId","poster_path","Container","location","useLocation","URLSearchParams","search","getSearchMovie","enabled","moviesData","moviesLoading","getSearchTvShows","tvShowsData","tvShowsLoading","Tv","onAirData","onAirIsLoading","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.01718732.chunk.js","sourcesContent":["import { Link, useHistory, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Nav = styled(motion.nav)`\n  z-index: 99;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  font-size: 14px;\n  padding: 20px 60px;\n  color: white;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  margin-right: 50px;\n  width: 95px;\n  height: 25px;\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 6px;\n    stroke: white;\n  }\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 20px;\n  color: ${(props) => props.theme.white.darker};\n  transition: color 0.3s ease-in-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  font-weight: 600;\n  &:hover {\n    color: ${(props) => props.theme.white.lighter};\n  }\n`;\n\nconst Search = styled.form`\n  color: white;\n  display: flex;\n  align-items: center;\n  position: relative;\n  cursor: pointer;\n  svg {\n    height: 25px;\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 5px;\n  height: 5px;\n  border-radius: 5px;\n  bottom: -8px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.red};\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  position: absolute;\n  right: 0px;\n  padding: 5px 10px;\n  padding-left: 40px;\n  z-index: -1;\n  color: white;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.white.lighter};\n`;\n\nconst logoVariants = {\n  normal: {\n    fillOpacity: 1,\n  },\n  active: {\n    fillOpacity: [0, 1, 0],\n    transition: {\n      repeat: Infinity,\n    },\n  },\n};\n\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\n  },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nfunction Header() {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const homeMatch = useRouteMatch(\"/\");\n  const tvMatch = useRouteMatch(\"/tv\");\n  const searchMatch = useRouteMatch(\"/search\");\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const history = useHistory();\n  const toggleSearch = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      inputAnimation.start({ scaleX: 1 });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollY, navAnimation]);\n\n  const { register, handleSubmit } = useForm<IForm>();\n\n  const onValid = (data: IForm) => {\n    history.push(`/search?keyword=${data.keyword}`);\n  };\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\n      <Col>\n        <Logo\n          variants={logoVariants}\n          whileHover=\"active\"\n          animate=\"normal\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1024\"\n          height=\"276.742\"\n          viewBox=\"0 0 1024 276.742\"\n        >\n          <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n        </Logo>\n        <Items>\n          <Item>\n            <Link to=\"/\">\n              Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/tv\">\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/search\">\n              Search {searchMatch && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onValid)}>\n          <motion.svg\n            onClick={toggleSearch}\n            animate={{ x: searchOpen ? -185 : 0 }}\n            transition={{ type: \"linear\" }}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </motion.svg>\n          <Input\n            {...register(\"keyword\", { required: true })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: \"linear\" }}\n            placeholder=\"Search for movie or tv show...\"\n          />\n        </Search>\n      </Col>\n    </Nav>\n  );\n}\n\nexport default Header;\n","const API_KEY = \"78975d1251ca1b10b35c28cc150a9be9\";\nconst BASE_URL = \"https://api.themoviedb.org/3\";\nexport interface IGetTvShowDetail {\n  backdrop_path: string;\n  poster_path: string;\n  name: string;\n  original_name: string;\n  overview: string;\n  vote_average: number;\n  id: number;\n  genres: [\n    {\n      id: number;\n      name: string;\n    }\n  ];\n  last_episode_to_air: {\n    air_date: string;\n    name: string;\n    episode_number: number;\n  };\n  next_episode_to_air: {\n    air_date: string;\n    name: string;\n    episode_number: number;\n  };\n}\nexport interface ITvShow {\n  backdrop_path: string;\n  id: number;\n  name: string;\n  original_name: string;\n  overview: string;\n  vote_average: number;\n  first_air_date: string;\n  poster_path: string;\n}\n\nexport interface IGetTvShowsResult {\n  page: number;\n  results: ITvShow[];\n  total_pages: number;\n  total_results: number;\n}\nexport interface IGetMoviesResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\nexport interface IGetMovieDetail {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  original_title: string;\n  overview: string;\n  vote_average: number;\n  genres: [\n    {\n      id: number;\n      name: string;\n    }\n  ];\n  tagline: string;\n}\nexport interface IMovie {\n  backdrop_path: string;\n  id: number;\n  original_title: string;\n  overview: string;\n  poster_path: string;\n}\n\nexport function getNowPlayingMovies() {\n  return fetch(`${BASE_URL}/movie/now_playing?api_key=${API_KEY}`).then((res) =>\n    res.json()\n  );\n}\n\nexport function getPopularMovies() {\n  return fetch(`${BASE_URL}/movie/popular?api_key=${API_KEY}`).then((res) =>\n    res.json()\n  );\n}\nexport function getTopRatedMovies() {\n  return fetch(`${BASE_URL}/movie/top_rated?api_key=${API_KEY}`).then((res) =>\n    res.json()\n  );\n}\n\nexport function getUpComingMovies() {\n  return fetch(`${BASE_URL}/movie/upcoming?api_key=${API_KEY}`).then((res) =>\n    res.json()\n  );\n}\n\nexport async function getMovieDetail(id: string) {\n  return fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}`).then((res) =>\n    res.json()\n  );\n}\n\nexport function getPopularTvShows() {\n  return fetch(`${BASE_URL}/tv/popular?api_key=${API_KEY}`).then((res) =>\n    res.json()\n  );\n}\n\nexport function getOnAirTvShows() {\n  return fetch(`${BASE_URL}/tv/on_the_air?api_key=${API_KEY}`).then((res) =>\n    res.json()\n  );\n}\n\nexport function getTopRatedTvShows() {\n  return fetch(`${BASE_URL}/tv/top_rated?api_key=${API_KEY}`).then((res) =>\n    res.json()\n  );\n}\n\nexport async function getTvShowDetail(id: string) {\n  return fetch(`${BASE_URL}/tv/${id}?api_key=${API_KEY}`).then((res) =>\n    res.json()\n  );\n}\n\nexport async function getSearchMovie(keyword: string) {\n  return fetch(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&language=en-US&page=1&query=${keyword}`\n  ).then((res) => res.json());\n}\n\nexport async function getSearchTvShows(keyword: string) {\n  return fetch(\n    `${BASE_URL}/search/tv?api_key=${API_KEY}&language=en-US&page=1&query=${keyword}`\n  ).then((res) => res.json());\n}\n","export function makeImagePath(id: string, format?: string) {\n  if (id === \"\") return \"\";\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\n","import { AnimatePresence, motion, useViewportScroll } from \"framer-motion\";\nimport { useQuery } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getMovieDetail, IGetMovieDetail } from \"../api\";\nimport { makeImagePath } from \"../utils\";\n\nexport const Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nexport const MovieInfoImage = styled.div<{ bgPhoto: string }>`\n  border-radius: 12px 12px 0 0;\n  height: 300px;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center;\n  background-repeat: no-repeat;\n  cursor: pointer;\n`;\n\nexport const BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nexport const BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 30px;\n  top: -80px;\n  font-weight: 600;\n`;\n\nexport const BigOverview = styled.p`\n  padding: 20px;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\ninterface IProps {\n  type: string;\n  id: string;\n}\n\nfunction MovieDetail({ type, id }: IProps) {\n  const { scrollY } = useViewportScroll();\n  const { data: detailData, isLoading: detailLoading } =\n    useQuery<IGetMovieDetail>([\"movie\", `${type}Detail`], () =>\n      getMovieDetail(id)\n    );\n  const history = useHistory();\n  const onOverlayClick = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <AnimatePresence>\n      {detailLoading ? (\n        \"Loading...\"\n      ) : (\n        <>\n          <Overlay\n            onClick={onOverlayClick}\n            exit={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n          />\n          <BigMovie style={{ top: scrollY.get() + 100 }}>\n            <>\n              <MovieInfoImage\n                bgPhoto={makeImagePath(\n                  detailData?.backdrop_path ? detailData?.backdrop_path : \"\",\n                  \"w500\"\n                )}\n              />\n              <BigTitle>{detailData?.original_title}</BigTitle>\n              <BigOverview>{detailData?.overview}</BigOverview>\n            </>\n          </BigMovie>\n        </>\n      )}\n    </AnimatePresence>\n  );\n}\n\nexport default MovieDetail;\n","import {\n  faSquareCaretLeft,\n  faSquareCaretRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { IGetMoviesResult } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport MovieDetail from \"./MovieDetail\";\n\nexport const Slider = styled.div`\n  position: relative;\n  height: 50vh;\n`;\n\nexport const Row = styled(motion.div)`\n  position: absolute;\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  width: 100%;\n`;\n\nexport const Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nexport const Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nexport const MovieTitle = styled.div`\n  font-weight: 800;\n  font-size: 18px;\n  margin-top: 210px;\n`;\n\nexport const TypeText = styled.div`\n  margin: 20px 0px 10px 0px;\n  padding-left: 10px;\n  color: white;\n  font-weight: 800;\n  font-size: 36px;\n`;\n\nexport const boxVariants = {\n  normal: {\n    scale: 1,\n    type: \"tween\",\n  },\n  hover: {\n    scale: 1.3,\n    y: -50,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nexport const infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duration: 0.3,\n      type: \"tween\",\n    },\n  },\n};\n\nexport const rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\nexport const offset = 6;\n\nexport const IconContainer = styled(motion.div)`\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nexport const PrevIcon = styled(motion.div)`\n  width: 60px;\n  left: 0;\n  font-size: 50px;\n  cursor: pointer;\n`;\nexport const NextIcon = styled(PrevIcon)``;\n\nexport const IconVariants = {\n  initial: {\n    opacity: 0.3,\n  },\n  hover: {\n    opacity: 1,\n  },\n};\n\ninterface IProps {\n  type: string;\n  data?: IGetMoviesResult;\n}\nfunction MovieSlider({ data, type }: IProps) {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string; type: string }>(\n    \"/movies/:type/:movieId\"\n  );\n\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n\n  const increaseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = data.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const discreaseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = data.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === 0 ? maxIndex - 1 : prev - 1));\n    }\n  };\n\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n\n  const onBoxClick = (movieId: number, type: string) => {\n    history.push(`/movies/${type}/${movieId}`);\n  };\n\n  return (\n    <>\n      <Slider>\n        <TypeText>{type}</TypeText>\n        <IconContainer>\n          <PrevIcon\n            variants={IconVariants}\n            initial=\"initial\"\n            whileHover=\"hover\"\n            onClick={discreaseIndex}\n          >\n            <FontAwesomeIcon icon={faSquareCaretLeft} />\n          </PrevIcon>\n          <NextIcon\n            variants={IconVariants}\n            initial=\"initial\"\n            whileHover=\"hover\"\n            onClick={increaseIndex}\n          >\n            <FontAwesomeIcon icon={faSquareCaretRight} />\n          </NextIcon>\n        </IconContainer>\n        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n          <Row\n            variants={rowVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            transition={{ type: \"tween\", duration: 1 }}\n            key={index}\n          >\n            {data?.results\n              .slice(offset * index, offset * index + offset)\n              .map((movie: any) => (\n                <>\n                  <Box\n                    key={movie.id + type}\n                    whileHover=\"hover\"\n                    initial=\"nomal\"\n                    variants={boxVariants}\n                    transition={{ type: \"tween\" }}\n                    onClick={() => onBoxClick(movie.id, type)}\n                    bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                  >\n                    <Info variants={infoVariants}>\n                      <h4>\n                        ⭐️{\" \"}\n                        {movie.vote_average ? movie.vote_average : \"No Data\"}\n                      </h4>\n                    </Info>\n                    <MovieTitle>\n                      <h4>{movie.original_title}</h4>\n                    </MovieTitle>\n                  </Box>\n                </>\n              ))}\n          </Row>\n        </AnimatePresence>\n      </Slider>\n      <AnimatePresence>\n        {bigMovieMatch ? (\n          <MovieDetail\n            type={bigMovieMatch.params.type}\n            id={bigMovieMatch.params.movieId}\n          />\n        ) : null}\n      </AnimatePresence>\n    </>\n  );\n}\n\nexport default MovieSlider;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport {\n  getNowPlayingMovies,\n  getPopularMovies,\n  getTopRatedMovies,\n  getUpComingMovies,\n  IGetMoviesResult,\n} from \"../api\";\nimport MovieSlider from \"../Components/MovieSlider\";\nimport { makeImagePath } from \"../utils\";\n\nexport const Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nexport const Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nexport const Title = styled.h2`\n  font-size: 48px;\n  margin-bottom: 20px;\n  font-weight: 600;\n`;\n\nexport const Overview = styled.p`\n  font-size: 25px;\n  width: 50%;\n`;\n\nfunction Home() {\n  const { data: nowPlayingData, isLoading: nowPlayingIsLoading } =\n    useQuery<IGetMoviesResult>([\"movies\", \"nowPlaying\"], getNowPlayingMovies);\n\n  const { data: popularData, isLoading: popularIsLoading } =\n    useQuery<IGetMoviesResult>([\"movies\", \"popular\"], getPopularMovies);\n\n  const { data: topRatedData, isLoading: topRatedIsLoading } =\n    useQuery<IGetMoviesResult>([\"movies\", \"topRated\"], getTopRatedMovies);\n\n  const { data: upComingData, isLoading: upComingIsLoading } =\n    useQuery<IGetMoviesResult>([\"movies\", \"upComing\"], getUpComingMovies);\n\n  return (\n    <Wrapper>\n      {nowPlayingIsLoading ||\n      popularIsLoading ||\n      topRatedIsLoading ||\n      upComingIsLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            bgPhoto={makeImagePath(\n              nowPlayingData?.results[0].backdrop_path || \"\"\n            )}\n          >\n            <Title>{nowPlayingData?.results[0].original_title}</Title>\n            <Overview>{nowPlayingData?.results[0].overview}</Overview>\n          </Banner>\n          <MovieSlider data={nowPlayingData} type=\"Now Playing\" />\n          <MovieSlider data={popularData} type=\"Popular\" />\n          <MovieSlider data={topRatedData} type=\"Top Rated\" />\n          <MovieSlider data={upComingData} type=\"Up Coming\" />\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default Home;\n","import { AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { useQuery } from \"react-query\";\nimport { useHistory } from \"react-router-dom\";\nimport { getTvShowDetail, IGetTvShowDetail } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport {\n  BigMovie,\n  BigOverview,\n  BigTitle,\n  MovieInfoImage,\n  Overlay,\n} from \"./MovieDetail\";\n\ninterface IProps {\n  type: string;\n  id: string;\n}\n\nfunction TvDetail({ type, id }: IProps) {\n  const { data: detailData, isLoading: detailLoading } =\n    useQuery<IGetTvShowDetail>([\"tvshow\", `${type}Detail`], () =>\n      getTvShowDetail(id)\n    );\n  const { scrollY } = useViewportScroll();\n\n  const history = useHistory();\n  const onOverlayClick = () => {\n    history.push(\"/tv\");\n  };\n\n  return (\n    <AnimatePresence>\n      {detailLoading ? (\n        \"Loading...\"\n      ) : (\n        <>\n          <Overlay\n            onClick={onOverlayClick}\n            exit={{ opacity: 0 }}\n            animate={{ opacity: 1 }}\n          />\n          <BigMovie style={{ top: scrollY.get() + 100 }}>\n            <>\n              <MovieInfoImage\n                bgPhoto={makeImagePath(\n                  detailData?.backdrop_path ? detailData?.backdrop_path : \"\",\n                  \"w500\"\n                )}\n              />\n              <BigTitle>{detailData?.original_name}</BigTitle>\n              <BigOverview>{detailData?.overview}</BigOverview>\n            </>\n          </BigMovie>\n        </>\n      )}\n    </AnimatePresence>\n  );\n}\n\nexport default TvDetail;\n","import {\n  faSquareCaretLeft,\n  faSquareCaretRight,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\nimport { IGetTvShowsResult } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport {\n  Box,\n  boxVariants,\n  IconContainer,\n  IconVariants,\n  Info,\n  infoVariants,\n  MovieTitle,\n  NextIcon,\n  offset,\n  PrevIcon,\n  Row,\n  rowVariants,\n  Slider,\n  TypeText,\n} from \"./MovieSlider\";\nimport TvDetail from \"./TvDetail\";\n\ninterface IProps {\n  type: string;\n  data?: IGetTvShowsResult;\n}\n\nfunction TvSlider({ data, type }: IProps) {\n  const history = useHistory();\n  const bigTvShowsMatch = useRouteMatch<{ tvshowId: string; type: string }>(\n    \"/tv/:type/:tvshowId\"\n  );\n\n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n\n  const increaseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTvShows = data.results.length - 1;\n      const maxIndex = Math.floor(totalTvShows / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n\n  const discreaseIndex = () => {\n    if (data) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTvShows = data.results.length - 1;\n      const maxIndex = Math.floor(totalTvShows / offset) - 1;\n      setIndex((prev) => (prev === 0 ? maxIndex - 1 : prev - 1));\n    }\n  };\n\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n\n  const onBoxClick = (tvshowId: number, type: string) => {\n    history.push(`/tv/${type}/${tvshowId}`);\n  };\n\n  return (\n    <>\n      <Slider>\n        <TypeText>{type}</TypeText>\n        <IconContainer>\n          <PrevIcon\n            variants={IconVariants}\n            initial=\"initial\"\n            whileHover=\"hover\"\n            onClick={discreaseIndex}\n          >\n            <FontAwesomeIcon icon={faSquareCaretLeft} />\n          </PrevIcon>\n          <NextIcon\n            variants={IconVariants}\n            initial=\"initial\"\n            whileHover=\"hover\"\n            onClick={increaseIndex}\n          >\n            <FontAwesomeIcon icon={faSquareCaretRight} />\n          </NextIcon>\n        </IconContainer>\n        <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n          <Row\n            variants={rowVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit=\"exit\"\n            transition={{ type: \"tween\", duration: 1 }}\n            key={index}\n          >\n            {data?.results\n              .slice(offset * index, offset * index + offset)\n              .map((tvshow: any) => (\n                <>\n                  <Box\n                    key={tvshow.id + type}\n                    whileHover=\"hover\"\n                    initial=\"nomal\"\n                    variants={boxVariants}\n                    transition={{ type: \"tween\" }}\n                    onClick={() => onBoxClick(tvshow.id, type)}\n                    bgPhoto={makeImagePath(\n                      tvshow.backdrop_path\n                        ? tvshow.backdrop_path\n                        : tvshow.poster_path,\n                      \"w500\"\n                    )}\n                  >\n                    <Info variants={infoVariants}>\n                      <h4>\n                        ⭐️{\" \"}\n                        {tvshow.vote_average ? tvshow.vote_average : \"No Data\"}\n                      </h4>\n                    </Info>\n                    <MovieTitle>\n                      <h4>{tvshow.original_name}</h4>\n                    </MovieTitle>\n                  </Box>\n                </>\n              ))}\n          </Row>\n        </AnimatePresence>\n      </Slider>\n      <AnimatePresence>\n        {bigTvShowsMatch ? (\n          <TvDetail\n            type={bigTvShowsMatch.params.type}\n            id={bigTvShowsMatch.params.tvshowId}\n          />\n        ) : null}\n      </AnimatePresence>\n    </>\n  );\n}\n\nexport default TvSlider;\n","import { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { getSearchMovie, getSearchTvShows } from \"../api\";\nimport MovieSlider from \"../Components/MovieSlider\";\nimport TvSlider from \"../Components/TvSlider\";\nimport { Loader, Wrapper } from \"./Home\";\n\nconst Container = styled.div`\n  margin-top: 100px;\n`;\n\nfunction Search() {\n  const location = useLocation();\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\n  const { data: moviesData, isLoading: moviesLoading } = useQuery(\n    [\"seacrchMovies\", keyword],\n    () => getSearchMovie(keyword!),\n    {\n      enabled: !!keyword,\n    }\n  );\n  const { data: tvShowsData, isLoading: tvShowsLoading } = useQuery(\n    [\"seacrchTvShows\", keyword],\n    () => getSearchTvShows(keyword!),\n    {\n      enabled: !!keyword,\n    }\n  );\n\n  return (\n    <Wrapper>\n      {moviesLoading || tvShowsLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <Container>\n          <MovieSlider data={moviesData} type=\"Movie Search\" />\n          <TvSlider data={tvShowsData} type=\"Tv Show Search\" />\n        </Container>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Search;\n","import { useQuery } from \"react-query\";\nimport {\n  getOnAirTvShows,\n  getPopularTvShows,\n  getTopRatedTvShows,\n  IGetTvShowsResult,\n} from \"../api\";\nimport TvSlider from \"../Components/TvSlider\";\nimport { makeImagePath } from \"../utils\";\nimport { Banner, Loader, Overview, Title, Wrapper } from \"./Home\";\n\nfunction Tv() {\n  const { data: onAirData, isLoading: onAirIsLoading } =\n    useQuery<IGetTvShowsResult>([\"tvshows\", \"onAir\"], getOnAirTvShows);\n\n  const { data: popularData, isLoading: popularIsLoading } =\n    useQuery<IGetTvShowsResult>([\"tvshows\", \"popular\"], getPopularTvShows);\n\n  const { data: topRatedData, isLoading: topRatedIsLoading } =\n    useQuery<IGetTvShowsResult>([\"tvshows\", \"topRated\"], getTopRatedTvShows);\n\n  return (\n    <Wrapper>\n      {onAirIsLoading || popularIsLoading || topRatedIsLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            bgPhoto={makeImagePath(\n              topRatedData?.results[0].backdrop_path || \"\"\n            )}\n          >\n            <Title>{topRatedData?.results[0].original_name}</Title>\n            <Overview>{topRatedData?.results[0].overview}</Overview>\n          </Banner>\n          <TvSlider data={onAirData} type=\"On Air\" />\n          <TvSlider data={popularData} type=\"Popular\" />\n          <TvSlider data={topRatedData} type=\"Top Rated\" />\n        </>\n      )}\n    </Wrapper>\n  );\n}\n\nexport default Tv;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/Tv\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/tv\">\n          <Tv />\n        </Route>\n        <Route path=\"/search\">\n          <Search />\n        </Route>\n        <Route path={[\"/\", \"/movies/:movieId\"]}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { theme } from \"./theme\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color: black;\n  overflow-x: hidden;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    veryDark: \"#141414\",\n    darker: \"#181818\",\n    lighter: \"#2F2F2F\",\n  },\n  white: {\n    lighter: \"#fff\",\n    darker: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}